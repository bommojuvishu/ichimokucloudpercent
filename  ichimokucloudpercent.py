import yfinance as yfimport numpy as npimport datetime as dtimport pandas as pdimport datetimeimport osfrom scipy import statsimport tracebackimport matplotlib.pyplot as pltimport jsonimport logging def computeCloud (data):    if data.Close > data.MovingAVG:        return 1        return 0# liststocks = ['TATACONSUM' , 'INFY','TCS','DMART','GLAND','YESBANK','SWSOLAR','CAMLINFINE','INFY']liststocks = ["BEL","BIRLACORPN","GREAVESCOT","INDIACEM","HAL","NATIONALUM","PNB","JSL","COFORGE","DCBBANK","SOBHA","TV18BRDCST","INDIANB","FORTIS","SJVN","INDUSTOWER","IDFCFIRSTB","ENDURANCE"] tickers={}TODAY = "2021-11-23"datetime_object = dt.datetime.strptime(TODAY, '%Y-%m-%d')for name in liststocks:     try:        result = []                # periods = ['1mo','3mo','6mo','1y']        periods = [365]        percentile = [1,3,6,12]        i=0        rsi = 0        abovecloudscore = 0        percentilerank = 0                for per in periods:            ohlcv = yf.download(name +'.NS',datetime_object -dt.timedelta(per),datetime_object)            calcloud=ohlcv            # print(ohlcv)            calcloud['MovingAVG'] = calcloud['Close'].rolling(window=52).mean()            calcloud['AbvCloud'] = calcloud.apply(lambda x: computeCloud(x), axis=1)            if per== 365:                abovecloudscore = sum(calcloud['AbvCloud'])                total = len(ohlcv) - 52                 abovecloudscore =abovecloudscore / total                abovecloudscore = abovecloudscore*100                                result.append(abovecloudscore)        tickers[name] = result        except Exception as ex:        print(ex)#raised if `y` is empty.        print("ERROR: ", name)        logger.info("ERROR: "+ name)        logger.info(ex)        liststocks.remove(name)        traceback.print_exc()        df=pd.DataFrame.from_dict(tickers,orient='index')df = df.reset_index() 